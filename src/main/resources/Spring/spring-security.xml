<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
	
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/>
    </bean>
    
    <bean id="sha256Matcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
		<property name="hashAlgorithmName" value="SHA-256" />
		<property name="storedCredentialsHexEncoded" value="true" />
		<property name="hashIterations" value="2" />
	</bean>
	
	<!-- Realm实现 -->
    <bean id="jdbcRealm" class="com.sprd.test.af.security.WebRealm">
        <property name="name" value="jdbcRealm" />
        <property name="permissionsLookupEnabled" value="true"/>
        <property name="credentialsMatcher" ref="sha256Matcher"/>
        <property name="authorizationCacheName" value="shiro.authorizationCache" />
    </bean>
	
	<bean id="iniRealm" class="com.sprd.test.af.security.WebRealm">
		<property name="cachingEnabled" value="true" />
		<property name="authenticationCachingEnabled" value="true" />
		<property name="authenticationCacheName" value="authenticationCache" />
		<property name="authorizationCachingEnabled" value="true" />
		<property name="authorizationCacheName" value="authorizationCache" />
	</bean>
	
    <!-- 会话ID生成器 -->
   <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <!-- 会话Cookie模板 -->
   <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
        <constructor-arg name="name" value="asid"/>
    </bean> 
    
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">  
	    <constructor-arg value="rememberMe"/>
	    <property name="httpOnly" value="true"/>
	    <property name="maxAge" value="180000"/><!-- 30天 -->
	</bean>
	<!-- rememberMe管理器 -->
	<bean id="rememberMeManager"
	class="org.apache.shiro.web.mgt.CookieRememberMeManager">
	     <property name="cookie" ref="rememberMeCookie"/>
	</bean>
	
    <!-- 会话DAO -->
	<bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">		
		<property name="activeSessionsCacheName" value="self-shiro-activeSessionCache" />
		<property name="sessionIdGenerator" ref="sessionIdGenerator" />
	</bean> 
	
	<!-- Shiro 提供了使用Quartz会话验证调度器  使用时需要导入shiro-quartz依赖：-->
	<!-- 会话验证调度器  升级quartz to version 2.2.1 org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler-->
	<bean id="sessionValidationScheduler" class="com.sprd.test.af.quartz.QuartzSessionValidationScheduler">
		<property name="sessionValidationInterval" value="1800000" /><!-- 相隔多久检查一次session的有效性  -->
		<property name="sessionManager" ref="sessionManager" />
	</bean> 
	
	<!-- 会话管理器 -->
	 <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="globalSessionTimeout" value="1800000" />  <!-- session 有效时间为半小时 （毫秒单位）   -->
		<property name="deleteInvalidSessions" value="true" />
		<property name="sessionValidationSchedulerEnabled" value="true" />
		<property name="sessionValidationScheduler" ref="sessionValidationScheduler" />
		<property name="sessionDAO" ref="sessionDAO" /> 
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
	</bean> 
	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="jdbcRealm" />
		<property name="sessionManager" ref="sessionManager" /> 
		<property name="cacheManager" ref="cacheManager"/>
	    <property name="rememberMeManager" ref="rememberMeManager"/>
	</bean>
	<!-- 基于Form表单的身份验证过滤器 -->
	<bean id="formAuthenticationFilter" 
   		class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter"/>
	<!-- Shiro的Web过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
	    <property name="securityManager" ref="securityManager" />  
	    <property name="loginUrl" value="/user/login.do" />
   		<property name="successUrl" value="/user/login.do"/>
	    <property name="unauthorizedUrl" value="/user/noperm.do" /> 
		<property name="filters">
			<util:map>
				<entry key="authc" value-ref="formAuthenticationFilter"/>  <!-- 自定义filter -->
			</util:map>
		</property>  
	    <property name="filterChainDefinitions">  
        <value>
	         /=anon 
	         /login.do*=authc
	         /noperm.do*=authc
	         /logout.do*=anon
	         /** = anon
        </value>
	    </property>  
	</bean>  
	
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true" />
    </bean>
   
	<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>
	<!-- Shiro生命周期处理器 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
</beans>	